<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nightingale on PyYoshiのログ置き場</title>
    <link>http://pyyoshi.github.io/blog/tags/Nightingale/</link>
    <description>Recent content in Nightingale on PyYoshiのログ置き場</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 03 Apr 2013 10:25:00 +0900</lastBuildDate>
    
	<atom:link href="http://pyyoshi.github.io/blog/tags/Nightingale/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Nightingale Addonでxhr.responseTextを使用したDOMを作成する場合の注意点</title>
      <link>http://pyyoshi.github.io/blog/2013/04/Nightingale-Addon%E3%81%A7xhr.responseText%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9FDOM%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E6%B3%A8%E6%84%8F%E7%82%B9/</link>
      <pubDate>Wed, 03 Apr 2013 10:25:00 +0900</pubDate>
      
      <guid>http://pyyoshi.github.io/blog/2013/04/Nightingale-Addon%E3%81%A7xhr.responseText%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9FDOM%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E6%B3%A8%E6%84%8F%E7%82%B9/</guid>
      <description>昨日の投稿でDOM操作できないことを嘆いていたのですが、その解決方法がわかりました。
なお、この症状はaddon上でのみ起きます。それへの対処です。
一般的にXHRのresponseTextをDOMへ変換するときは
 var dom = document.createElement(&amp;ldquo;div&amp;rdquo;);
dom.innerHTML = xhr.responseText;
 のようにやるかと思います。
しかしNightingaleやFirefoxのaddon上でこれをやるとXULなオブジェクトになってしまい、ただしくDOMを扱えなくなります(自分なりの仮説)
そのため正しくHTMLDocumentを作ってやれば良いのです。
以下の関数がそれを行うためのものです。
これによってaddon上でもただしく快適にDOMを扱えるようになります！
※このコードはNightingaleとFirefox3.6.x以前のブラウザでのみ動作保証します。それ以降のFirefoxは素直に document.implementation.createHTMLDocumentを使いましょう参考:
 Analyzing and manipulating a responseText property containing an HTML document Safely parsing simple HTML to DOM   </description>
    </item>
    
    <item>
      <title>Nightingaleのaddonでdomが使えない。</title>
      <link>http://pyyoshi.github.io/blog/2013/04/Nightingale%E3%81%AEaddon%E3%81%A7dom%E3%81%8C%E4%BD%BF%E3%81%88%E3%81%AA%E3%81%84/</link>
      <pubDate>Tue, 02 Apr 2013 23:01:00 +0900</pubDate>
      
      <guid>http://pyyoshi.github.io/blog/2013/04/Nightingale%E3%81%AEaddon%E3%81%A7dom%E3%81%8C%E4%BD%BF%E3%81%88%E3%81%AA%E3%81%84/</guid>
      <description>jsfidleでdomを動かすなどの処理はうまくいくのですが、addon内でdomを使うことができないようになっている。
ほんとに謎仕様である。
普通のFirefoxでもaddonではdom扱えないのかな？
正直、これ使えないのクソだと思います。スクレイピングやりたかったら文字列操作ですべてやれとか僕には無理です…
解決策ないのかしら解決策はこちら</description>
    </item>
    
    <item>
      <title>Nightingaleでaddonのデバッグに必要なもの</title>
      <link>http://pyyoshi.github.io/blog/2013/04/Nightingale%E3%81%A7addon%E3%81%AE%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E3%81%AB%E5%BF%85%E8%A6%81%E3%81%AA%E3%82%82%E3%81%AE/</link>
      <pubDate>Tue, 02 Apr 2013 01:28:00 +0900</pubDate>
      
      <guid>http://pyyoshi.github.io/blog/2013/04/Nightingale%E3%81%A7addon%E3%81%AE%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E3%81%AB%E5%BF%85%E8%A6%81%E3%81%AA%E3%82%82%E3%81%AE/</guid>
      <description>Linuxで音楽を聴くときはdeadbeefを使っていたのですが、タグがsjisとかだと文字化けするしプラグインもあんまりよくないので乗り換え先を探していました。
そんな時にSongbirdからforkされたNightingaleというプレイヤーを発見。
どうやらこいつはFirefoxなどで使われているGeckoエンジンをベースに作られているらしく、addonの作成ノウハウをそのまま活かせるみたいなんです。
それで自分でほしいプラグインもjsでちょくちょく書けるようにしたくてデバッグ環境の構築をしようかと思ったのですが、本家SongbirdのWiKi(Google Cache)にアクセスできなくなっているため探すのに一苦労しました…
デバッグ環境の構築は至って簡単で
Firefox addonのJavascript DebuggerとNightingale Developer Toolsをインスコ&amp;amp;再起動すればJSのデバッグを手軽に行えるようになります。
以上</description>
    </item>
    
  </channel>
</rss>