<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nose on PyYoshiのログ置き場</title>
    <link>https://pyyoshi.github.io/blog/tags/nose/</link>
    <description>Recent content in nose on PyYoshiのログ置き場</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 18 Jun 2012 15:58:00 +0900</lastBuildDate>
    
	<atom:link href="https://pyyoshi.github.io/blog/tags/nose/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PyGooglePlusをプロファイリングしてみた</title>
      <link>https://pyyoshi.github.io/blog/2012/06/PyGooglePlus%E3%82%92%E3%83%97%E3%83%AD%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AA%E3%83%B3%E3%82%B0%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F/</link>
      <pubDate>Mon, 18 Jun 2012 15:58:00 +0900</pubDate>
      
      <guid>https://pyyoshi.github.io/blog/2012/06/PyGooglePlus%E3%82%92%E3%83%97%E3%83%AD%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AA%E3%83%B3%E3%82%B0%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F/</guid>
      <description>現在noseでテストコードを書いてるのだけれど、ついでにどこが足を引っ張っているのか知るためにnose経由でプロファイリングしてみた。
準備
 Graphizをインストール $ pip install https://guppy-pe.svn.sourceforge.net/svnroot/guppy-pe/trunk/guppy&amp;lt;/span&amp;gt; $ pip install pbp.scripts  テストコードをtests.pyとして書いたら
$ nosetests &amp;ndash;with-profile &amp;ndash;profile-stats-file nose.prof tests.py
$ hotshot2dot nose.prof| dot -Tpng -o profile.png
を実行して出力した画像とにらめっこ
今回はApiHandler.get_user_info()のみのテストコードで行った。 またBeautifulSoup4がリリースされていることを知り、lxmlあれば早くなるよって言ってたので、3と4の2パターンで行った。
以下が結果である。


上がBS3、下がBS4であるが結果としては、lxmlを使っているはずのBS4のほうが遅い結果になっている。処理が余計にかかっている印象。 いずれ改善されると思うけど、特に必要性を感じないのであればBS3を使っておけばいいと思う。
それにしてもchardetの処理が足を引っ張りすぎている気がする。それと自分のライブラリ（苦笑）
※ この結果を出したときは指定していなかったが、文字コードが固定で既知なら,from_encoding引数をBeautifulSoupに指定してあげるのもいいと思うよ。 実験的にPyGooglePlusにも使用してみたら、5分の1くらい処理時間が縮まりました。 省いてるから当然だね。 だとしてもC拡張のchardetが欲しくなるよね。だれか作らないかな参考：
 Visual profiling with Nose and gprof2dot  </description>
    </item>
    
  </channel>
</rss>