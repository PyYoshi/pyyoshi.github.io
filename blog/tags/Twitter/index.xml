<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Twitter on PyYoshiのログ置き場</title>
    <link>http://github.pyyoshi.com/blog/tags/Twitter/</link>
    <description>Recent content in Twitter on PyYoshiのログ置き場</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 25 Apr 2013 19:09:00 +0900</lastBuildDate>
    
	<atom:link href="http://github.pyyoshi.com/blog/tags/Twitter/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>投稿だけできるTwitterクライアント作った</title>
      <link>http://github.pyyoshi.com/blog/2013/04/%E6%8A%95%E7%A8%BF%E3%81%A0%E3%81%91%E3%81%A7%E3%81%8D%E3%82%8BTwitter%E3%82%AF%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%B3%E3%83%88%E4%BD%9C%E3%81%A3%E3%81%9F/</link>
      <pubDate>Thu, 25 Apr 2013 19:09:00 +0900</pubDate>
      
      <guid>http://github.pyyoshi.com/blog/2013/04/%E6%8A%95%E7%A8%BF%E3%81%A0%E3%81%91%E3%81%A7%E3%81%8D%E3%82%8BTwitter%E3%82%AF%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%B3%E3%83%88%E4%BD%9C%E3%81%A3%E3%81%9F/</guid>
      <description>デスクトップにツイッタクライアント置くとどうしてもスペースの無駄になってしまうので、タイムラインはAndroidタブレットにtwicle plusを入れて監視していました。
投稿する都度TwitterWeb開いてやっていたのですが、それこそ効率を落とす原因だと思ったのでさくっと投稿だけできるツイッタクライアント作りました。
Twiq for Desktop - Github
Twitter APIライブラリはtweepyに任せて、UIはPySideを使って書きました。

自分しか使わないのでデザインもクソも無いです
上のコンボボックスはアカウント用、下はこれからつけようとしてる機能のもの、＋と✕はアカウント追加と削除用です。
機能は
 投稿機能 マルチアカウント機能 UnDo機能  の３つです。
投稿はCtrl+Enter、UnDoはCtrl+Uで行われます。</description>
    </item>
    
    <item>
      <title>黒歴史クリーナーよりも確実にツイートを消すスクリプト</title>
      <link>http://github.pyyoshi.com/blog/2013/03/%E9%BB%92%E6%AD%B4%E5%8F%B2%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%8A%E3%83%BC%E3%82%88%E3%82%8A%E3%82%82%E7%A2%BA%E5%AE%9F%E3%81%AB%E3%83%84%E3%82%A4%E3%83%BC%E3%83%88%E3%82%92%E6%B6%88%E3%81%99%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88/</link>
      <pubDate>Tue, 12 Mar 2013 01:17:00 +0900</pubDate>
      
      <guid>http://github.pyyoshi.com/blog/2013/03/%E9%BB%92%E6%AD%B4%E5%8F%B2%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%8A%E3%83%BC%E3%82%88%E3%82%8A%E3%82%82%E7%A2%BA%E5%AE%9F%E3%81%AB%E3%83%84%E3%82%A4%E3%83%BC%E3%83%88%E3%82%92%E6%B6%88%E3%81%99%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88/</guid>
      <description>※黒歴史クリーナーがTwitterArchiveに対応したので以下の内容は、それらのサービスに頼りたくない人のみお読みになられればと思いますまる
黒歴史クリーナーなどのAPIを利用した削除方法だと削除しきれないツイートがどうしても出てしまいます。
なのでTwitterの設定から&amp;quot;Your Twitter archive&amp;quot;機能を利用してCSVなどのデータをダウンロードします。 ※表示言語を英語にしないと見えないかも

&amp;ldquo;Request email&amp;quot;をクリックしてある程度時間が経つとemail経由でダウンロードリンクが送られてきます。そこからDLしてください。
Windows環境の方はここからrm_tweets.exeをDLしてコマンドラインから実行します。
tweets.csvとrm_tweets.exeが同じ場所にあると仮定した場合
 &amp;gt; .\rm_tweets.exe &amp;ndash;filepath &amp;ldquo;.\tweets.csv&amp;rdquo;
 で削除が開始されるかと思います。
使い方は
 &amp;gt; .\rm_tweets.exe -h
 で確認して下さい。
他の環境の方は
 $ git clone git://github.com/PyYoshi/TweetsCleaner.git
$ cd TweetsCleaner
$ pip install -r ./requirements.txt
$ python ./rm_tweets.py &amp;ndash;filepath &amp;ldquo;./tweets.csv&amp;rdquo;
 のようにしてください。
※ただしgit cloneした後、rm_tweets.pyを開いてCONSUMER_KEYとCONSUMER_SECRETを各自セットしないと動きません。 </description>
    </item>
    
  </channel>
</rss>