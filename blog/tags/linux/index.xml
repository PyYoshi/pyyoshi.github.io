<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on PyYoshiのログ置き場</title>
    <link>https://pyyoshi.github.io/blog/tags/linux/</link>
    <description>Recent content in linux on PyYoshiのログ置き場</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 31 Oct 2018 14:21:48 +0000</lastBuildDate>
    
	<atom:link href="https://pyyoshi.github.io/blog/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>XPS 13(9360 Intel 8th gen)のi915設定</title>
      <link>https://pyyoshi.github.io/blog/2018/10/XPS-139360-Intel-8th-gen%E3%81%AEi915%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Wed, 31 Oct 2018 14:21:48 +0000</pubDate>
      
      <guid>https://pyyoshi.github.io/blog/2018/10/XPS-139360-Intel-8th-gen%E3%81%AEi915%E8%A8%AD%E5%AE%9A/</guid>
      <description>i915.modeset=1 i915.enable_rc6=1 i915.enable_fbc=1 i915.enable_guc_loading=1 i915.enable_guc_submission=1 i915.disable_power_well=0 ちらつきまたはラップトップ側のディスプレイがブラックアウトする場合は
i915.enable_psr=0 にする.
$ dmesg で
[drm:intel_dp_start_link_train [i915]] *ERROR* [CONNECTOR:71:eDP-1] Link Training failed at link rate = 540000, lane count = 4 が見られる場合もまた
i915.enable_psr=0 にする必要がある.
i915ドライバーの設定情報は以下で参照できる.
$ modinfo -p i915 GRUB設定を更新する /etc/default/grub の
GRUB_CMDLINE_LINUX_DEFAULT に上の設定値を追加する.
設定を更新したら以下コマンドを実行してカーネルイメージの更新を行う.
$ sudo grub-mkconfig -o /boot/grub/grub.cfg </description>
    </item>
    
    <item>
      <title>XPS 13(9360 Intel 8th gen)のNVMEの省電力機能を有効にする</title>
      <link>https://pyyoshi.github.io/blog/2018/10/XPS-139360-Intel-8th-gen%E3%81%AENVME%E3%81%AE%E7%9C%81%E9%9B%BB%E5%8A%9B%E6%A9%9F%E8%83%BD%E3%82%92%E6%9C%89%E5%8A%B9%E3%81%AB%E3%81%99%E3%82%8B/</link>
      <pubDate>Wed, 31 Oct 2018 13:53:07 +0000</pubDate>
      
      <guid>https://pyyoshi.github.io/blog/2018/10/XPS-139360-Intel-8th-gen%E3%81%AENVME%E3%81%AE%E7%9C%81%E9%9B%BB%E5%8A%9B%E6%A9%9F%E8%83%BD%E3%82%92%E6%9C%89%E5%8A%B9%E3%81%AB%E3%81%99%E3%82%8B/</guid>
      <description>NVMEのモデルと設定値を調べる $ sudo nvme list 東芝の512GBの場合はカーネルコマンドラインに以下を指定
nvme_core.default_ps_max_latency_us=170000 1TBの場合は以下を指定
nvme_core.default_ps_max_latency_us=180000 GRUB設定を更新する /etc/default/grub の
GRUB_CMDLINE_LINUX_DEFAULT に上で調べた設定値を追加する
東芝512GBモデルの場合は以下のようになる
GRUB_CMDLINE_LINUX_DEFAULT=&amp;quot;nvme_core.default_ps_max_latency_us=170000&amp;quot; 設定を更新したら以下コマンドを実行してカーネルイメージの更新を行う
$ sudo grub-mkconfig -o /boot/grub/grub.cfg </description>
    </item>
    
    <item>
      <title>Ubuntuのバックアップ環境 - 調査</title>
      <link>https://pyyoshi.github.io/blog/2018/01/Ubuntu%E3%81%AE%E3%83%90%E3%83%83%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97%E7%92%B0%E5%A2%83-%E8%AA%BF%E6%9F%BB/</link>
      <pubDate>Fri, 05 Jan 2018 19:14:38 +0000</pubDate>
      
      <guid>https://pyyoshi.github.io/blog/2018/01/Ubuntu%E3%81%AE%E3%83%90%E3%83%83%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97%E7%92%B0%E5%A2%83-%E8%AA%BF%E6%9F%BB/</guid>
      <description>以前まではバックアップソフトは使わず必要なものはプライベートリポジトリに入れたりGdriveに入れたりしてた. (macOSはTimeMachineを常用)
これで十分だったけど, どうせならエンジニアらしくそれらをそれらしく自動化するのもおもしろそうなのでやっていく.
■ 欲しい機能 暗号化 バックアップ用ストレージは基本持って歩かないけれど, 仕事でもつかうので.
できるならば秘密鍵はYubiKey(PGP)で管理したい.
フルバックアップ 月1ペースでクリーンアップしたい.
差分バックアップ リストアは全体より単一ファイルで行う用途のほうが圧倒的に多い.
メンテが止まってもベースとなるツール(rsyncなど)でリストアが可能 これは大前提.
どうせ新しいUbuntuが出たら乗り換えるとおもうけど, そのリリースでも使えるかどうかはわからん.
あくまでバックアップだけど, リストアしたいときにメンテされて無くてリストアできないのは大変困る.
ディスクベースじゃなくてディレクトリベースで管理 ファイルシステムになるべく依存したくない.
NASへアップロードしたい.
■ TimeShift https://launchpad.net/timeshift
システムのバックアップ･リストアにフォーカスしている.
なのでHomeとかキャッシュとかそういうのは除外リストに入ってる.
Homeなどのユーザデータは別アプリに頼るべき.
暗号化されたファイルシステムのバックアップは可能.
ファイル自体の暗号化はたぶんできない(要調査).
なのでファイルシステム側で暗号化したほうがいいかも.
フルバックアップ後のバックアップは差分バックアップで行っていくようだ.
■ Deja Dup https://launchpad.net/deja-dup
ubuntuに標準で搭載されてるあれ.
Homeディレクトリ以下はこれでバックアップしたほうがよいっぽい.
差分バックアップの他にフルバックアップも用意されているので, 差分バックアップは2時間おき, フルバックアップは1ヶ月おきくらいで良いかもしれない.
これにすることで, あたらしいフルバックアップが作られたとき, 差分バックアップはそれをベースに行っていくみたい.
パスワードやPGPによる暗号化が可能.
■ Back In Time https://github.com/bit-team/backintime
TimeShift同様シンプル.
EncFSによるファイルシステムベースでの暗号化.
SSHでファイル転送できる.
EncFS使ってるので正直使いたいとは思えない…
■ Systemback https://launchpad.net/systemback
メンテしないようなので使わない.
■ 参考:  https://wiki.ubuntulinux.jp/UbuntuTips/Install/Backup http://gihyo.jp/admin/serial/01/ubuntu-recipe/0399 https://allabout.co.jp/gm/gc/436735/  </description>
    </item>
    
  </channel>
</rss>