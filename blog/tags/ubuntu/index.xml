<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ubuntu on PyYoshiのログ置き場</title>
    <link>https://github.pyyoshi.com/blog/tags/ubuntu/</link>
    <description>Recent content in Ubuntu on PyYoshiのログ置き場</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <copyright>&amp;#183; PyYoshi</copyright>
    <lastBuildDate>Wed, 31 Oct 2018 14:21:48 +0000</lastBuildDate>
    <atom:link href="https://github.pyyoshi.com/blog/tags/ubuntu/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>XPS 13(9360 Intel 8th gen)のi915設定</title>
      <link>https://github.pyyoshi.com/blog/2018/10/XPS-139360-Intel-8th-gen%E3%81%AEi915%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Wed, 31 Oct 2018 14:21:48 +0000</pubDate>
      <guid>https://github.pyyoshi.com/blog/2018/10/XPS-139360-Intel-8th-gen%E3%81%AEi915%E8%A8%AD%E5%AE%9A/</guid>
      <description>i915.modeset=1 i915.enable_rc6=1 i915.enable_fbc=1 i915.enable_guc_loading=1 i915.enable_guc_submission=1 i915.disable_power_well=0 ちらつきまたはラップトップ側のディスプレイがブラックアウトする場合は&#xA;i915.enable_psr=0 にする.&#xA;$ dmesg で&#xA;[drm:intel_dp_start_link_train [i915]] *ERROR* [CONNECTOR:71:eDP-1] Link Training failed at link rate = 540000, lane count = 4 が見られる場合もまた&#xA;i915.enable_psr=0 にする必要がある.&#xA;i915ドライバーの設定情報は以下で参照できる.&#xA;$ modinfo -p i915 GRUB設定を更新する /etc/default/grub の&#xA;GRUB_CMDLINE_LINUX_DEFAULT に上の設定値を追加する.&#xA;設定を更新したら以下コマンドを実行してカーネルイメージの更新を行う.&#xA;$ sudo grub-mkconfig -o /boot/grub/grub.cfg </description>
    </item>
    <item>
      <title>XPS 13(9360 Intel 8th gen)のNVMEの省電力機能を有効にする</title>
      <link>https://github.pyyoshi.com/blog/2018/10/XPS-139360-Intel-8th-gen%E3%81%AENVME%E3%81%AE%E7%9C%81%E9%9B%BB%E5%8A%9B%E6%A9%9F%E8%83%BD%E3%82%92%E6%9C%89%E5%8A%B9%E3%81%AB%E3%81%99%E3%82%8B/</link>
      <pubDate>Wed, 31 Oct 2018 13:53:07 +0000</pubDate>
      <guid>https://github.pyyoshi.com/blog/2018/10/XPS-139360-Intel-8th-gen%E3%81%AENVME%E3%81%AE%E7%9C%81%E9%9B%BB%E5%8A%9B%E6%A9%9F%E8%83%BD%E3%82%92%E6%9C%89%E5%8A%B9%E3%81%AB%E3%81%99%E3%82%8B/</guid>
      <description>NVMEのモデルと設定値を調べる $ sudo nvme list 東芝の512GBの場合はカーネルコマンドラインに以下を指定&#xA;nvme_core.default_ps_max_latency_us=170000 1TBの場合は以下を指定&#xA;nvme_core.default_ps_max_latency_us=180000 GRUB設定を更新する /etc/default/grub の&#xA;GRUB_CMDLINE_LINUX_DEFAULT に上で調べた設定値を追加する&#xA;東芝512GBモデルの場合は以下のようになる&#xA;GRUB_CMDLINE_LINUX_DEFAULT=&amp;#34;nvme_core.default_ps_max_latency_us=170000&amp;#34; 設定を更新したら以下コマンドを実行してカーネルイメージの更新を行う&#xA;$ sudo grub-mkconfig -o /boot/grub/grub.cfg </description>
    </item>
    <item>
      <title>Ubuntu 18.04で起動時間が遅い場合の対処</title>
      <link>https://github.pyyoshi.com/blog/2018/10/Ubuntu-18.04%E3%81%A7%E8%B5%B7%E5%8B%95%E6%99%82%E9%96%93%E3%81%8C%E9%81%85%E3%81%84%E5%A0%B4%E5%90%88%E3%81%AE%E5%AF%BE%E5%87%A6/</link>
      <pubDate>Tue, 09 Oct 2018 19:19:21 +0000</pubDate>
      <guid>https://github.pyyoshi.com/blog/2018/10/Ubuntu-18.04%E3%81%A7%E8%B5%B7%E5%8B%95%E6%99%82%E9%96%93%E3%81%8C%E9%81%85%E3%81%84%E5%A0%B4%E5%90%88%E3%81%AE%E5%AF%BE%E5%87%A6/</guid>
      <description>起動時のコンソールに以下が表示されたあとにログイン画面が表示される場合は&#xA;give up waiting for suspend/resume device $ cat /etc/initramfs-tools/conf.d/resume RESUME=none すれば解決する.&#xA;ハイバネーションを利用しない場合に限る</description>
    </item>
    <item>
      <title>Ubuntuのバックアップ環境 - 調査</title>
      <link>https://github.pyyoshi.com/blog/2018/01/Ubuntu%E3%81%AE%E3%83%90%E3%83%83%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97%E7%92%B0%E5%A2%83-%E8%AA%BF%E6%9F%BB/</link>
      <pubDate>Fri, 05 Jan 2018 19:14:38 +0000</pubDate>
      <guid>https://github.pyyoshi.com/blog/2018/01/Ubuntu%E3%81%AE%E3%83%90%E3%83%83%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97%E7%92%B0%E5%A2%83-%E8%AA%BF%E6%9F%BB/</guid>
      <description>以前まではバックアップソフトは使わず必要なものはプライベートリポジトリに入れたりGdriveに入れたりしてた. (macOSはTimeMachineを常用)&#xA;これで十分だったけど, どうせならエンジニアらしくそれらをそれらしく自動化するのもおもしろそうなのでやっていく.&#xA;■ 欲しい機能 暗号化 バックアップ用ストレージは基本持って歩かないけれど, 仕事でもつかうので.&#xA;できるならば秘密鍵はYubiKey(PGP)で管理したい.&#xA;フルバックアップ 月1ペースでクリーンアップしたい.&#xA;差分バックアップ リストアは全体より単一ファイルで行う用途のほうが圧倒的に多い.&#xA;メンテが止まってもベースとなるツール(rsyncなど)でリストアが可能 これは大前提.&#xA;どうせ新しいUbuntuが出たら乗り換えるとおもうけど, そのリリースでも使えるかどうかはわからん.&#xA;あくまでバックアップだけど, リストアしたいときにメンテされて無くてリストアできないのは大変困る.&#xA;ディスクベースじゃなくてディレクトリベースで管理 ファイルシステムになるべく依存したくない.&#xA;NASへアップロードしたい.&#xA;■ TimeShift https://launchpad.net/timeshift&#xA;システムのバックアップ･リストアにフォーカスしている.&#xA;なのでHomeとかキャッシュとかそういうのは除外リストに入ってる.&#xA;Homeなどのユーザデータは別アプリに頼るべき.&#xA;暗号化されたファイルシステムのバックアップは可能.&#xA;ファイル自体の暗号化はたぶんできない(要調査).&#xA;なのでファイルシステム側で暗号化したほうがいいかも.&#xA;フルバックアップ後のバックアップは差分バックアップで行っていくようだ.&#xA;■ Deja Dup https://launchpad.net/deja-dup&#xA;ubuntuに標準で搭載されてるあれ.&#xA;Homeディレクトリ以下はこれでバックアップしたほうがよいっぽい.&#xA;差分バックアップの他にフルバックアップも用意されているので, 差分バックアップは2時間おき, フルバックアップは1ヶ月おきくらいで良いかもしれない.&#xA;これにすることで, あたらしいフルバックアップが作られたとき, 差分バックアップはそれをベースに行っていくみたい.&#xA;パスワードやPGPによる暗号化が可能.&#xA;■ Back In Time https://github.com/bit-team/backintime&#xA;TimeShift同様シンプル.&#xA;EncFSによるファイルシステムベースでの暗号化.&#xA;SSHでファイル転送できる.&#xA;EncFS使ってるので正直使いたいとは思えない…&#xA;■ Systemback https://launchpad.net/systemback&#xA;メンテしないようなので使わない.&#xA;■ 参考: https://wiki.ubuntulinux.jp/UbuntuTips/Install/Backup http://gihyo.jp/admin/serial/01/ubuntu-recipe/0399 https://allabout.co.jp/gm/gc/436735/ </description>
    </item>
    <item>
      <title>libwebpのビルド</title>
      <link>https://github.pyyoshi.com/blog/2011/06/libwebp%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89/</link>
      <pubDate>Fri, 03 Jun 2011 19:00:00 +0900</pubDate>
      <guid>https://github.pyyoshi.com/blog/2011/06/libwebp%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89/</guid>
      <description>Ubuntu 10.04に用意されていないようで自前で用意したときのメモ&#xA;$ cd tmp&#xA;$ wget http://webp.googlecode.com/files/libwebp-0.1.2.tar.gz&#xA;$ tar zxvf libwebp-0.1.2.tar.gz&#xA;$ cd libwebp-0.1.2&#xA;$ sudo apt-get install automake libtool&#xA;$ aclocal &amp;amp;&amp;amp; autoconf &amp;amp;&amp;amp; automake -a -c;&#xA;$ ./autogen.sh&#xA;$ ./.configure&#xA;$ make&#xA;$ sudo make install&#xA;$ ls -la /usr/local/lib/libwebp*&#xA;$ ls -la /usr/local/include/webp/*&#xA;$ ls -la /usr/local/bin/*webp&#xA;以上</description>
    </item>
    <item>
      <title>x11vncをUbuntu10.04にインストールする</title>
      <link>https://github.pyyoshi.com/blog/2011/03/x11vnc%E3%82%92Ubuntu10.04%E3%81%AB%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</link>
      <pubDate>Mon, 21 Mar 2011 19:57:00 +0900</pubDate>
      <guid>https://github.pyyoshi.com/blog/2011/03/x11vnc%E3%82%92Ubuntu10.04%E3%81%AB%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</guid>
      <description>以前はVNCクライアント上でD&amp;amp;D出来た記憶があったけど10.04ではなんかうまくいかなかった。&#xA;仕様なのかなと思ったけど違うみたい。 いろいろなサイト（海外のフォーラム）でvnc4server以外でもどうやら起きている見たいで、x11vncだけはそうでもないってことでそれを入れた。&#xA;いろいろなサイトを参考にx11vncをxinetdで動かそうとしたんだけどうまくいかねぇ…&#xA;自ビルドしたり、gdmに登録してみたり、半日くらい潰した。無能すぎる&#xA;ってなわけで&#xA;$sudo apt-get install x11vnc&#xA;$sudo mkdir /etc/x11vnc&#xA;$sudo x11vnc -storepasswd /etc/x11vnc/passwd&#xA;$sudo chmod 644 /etc/x11vnc/passwd&#xA;$sudo vim /etc/xinetd.d/x11vnc&#xA;service x11vnc&#xA;{&#xA;type = UNLISTED&#xA;protocol = tcp&#xA;disable = 0&#xA;user = root&#xA;server = /usr/bin/x11vnc&#xA;server_args = -inetd -o /var/log/x11vnc.log -forever -auth /var/lib/gdm/:0.Xauth　-display :0 -xkb -rfbauth /etc/x11vnc/passwd&#xA;port = ポート適宜&#xA;}&#xA;$sudo vim /etc/services&#xA;x11vnc ポート番号適宜/tcp #X11VNC Server&#xA;これでいちよ動くようになった。&#xA;-xkbオプション追加でshiftキーが使えるようになる。&#xA;てかx11vncなんかきびきび動いてくれませんね(Color depthが指定できないからかな？) vnc4serverの方が個人的には好きかもｗ</description>
    </item>
    <item>
      <title>cd hoge; ls-aと打つのがめんどくさくて、、</title>
      <link>https://github.pyyoshi.com/blog/2011/02/cd-hoge-ls-a%E3%81%A8%E6%89%93%E3%81%A4%E3%81%AE%E3%81%8C%E3%82%81%E3%82%93%E3%81%A9%E3%81%8F%E3%81%95%E3%81%8F%E3%81%A6/</link>
      <pubDate>Wed, 09 Feb 2011 17:00:00 +0900</pubDate>
      <guid>https://github.pyyoshi.com/blog/2011/02/cd-hoge-ls-a%E3%81%A8%E6%89%93%E3%81%A4%E3%81%AE%E3%81%8C%E3%82%81%E3%82%93%E3%81%A9%E3%81%8F%E3%81%95%E3%81%8F%E3%81%A6/</guid>
      <description>最近リナックスを使う機会が多くなってきて、どうもcd コマンドの後にls -aと打つのが面倒になってきた。&#xA;最初はまぁそーいうものだろうと思ってたんだけど我慢の限界だったので、bashrcにcd hoge; ls -aをcdコマンドだけで出来るようにした。&#xA;$vim .bashrc&#xA;function cd() {&#xA;builtin cd $@&#xA;ls -a&#xA;}&#xA;$source .bashrc&#xA;を追加して終了。&#xA;動くか心配だったけど無事動きましたｗ</description>
    </item>
    <item>
      <title>暗号化したHomeで注意すること SSH編</title>
      <link>https://github.pyyoshi.com/blog/2011/01/%E6%9A%97%E5%8F%B7%E5%8C%96%E3%81%97%E3%81%9FHome%E3%81%A7%E6%B3%A8%E6%84%8F%E3%81%99%E3%82%8B%E3%81%93%E3%81%A8-SSH%E7%B7%A8/</link>
      <pubDate>Sat, 15 Jan 2011 19:20:00 +0900</pubDate>
      <guid>https://github.pyyoshi.com/blog/2011/01/%E6%9A%97%E5%8F%B7%E5%8C%96%E3%81%97%E3%81%9FHome%E3%81%A7%E6%B3%A8%E6%84%8F%E3%81%99%E3%82%8B%E3%81%93%E3%81%A8-SSH%E7%B7%A8/</guid>
      <description>普段はHomeなんて暗号化しない設定でOSを構築するのでが、正月中に作ったとある鯖では暗号化したHomeを採用していた。&#xA;そのときは、まぁ何も影響ないだろうと思っていたのだが、SSHなどの公開鍵認証でそれにぶち当たった。&#xA;基本的に公開鍵はHome以下の&amp;quot;.ssh&amp;quot;に置くのだが、暗号化Homeの場合はそのデフォルトの状態だと公開鍵を読みに行くことが出来ないのだ。&#xA;/home以下がマウントされることはないので。&#xA;なので、公開鍵は/home以外の場所に置く必要が出てくる。&#xA;で、実際やることは&#xA;/homeが見える環境で公開鍵を別の場所にコピーすればおｋってことで作業開始。&#xA;$sudo mkdir /etc/&#xA;$sudo cp $HOME/.ssh/authorized_keys /etc//authorized_keys&#xA;$sudo chmod 700 /etc/&#xA;$sudo chown /etc/&#xA;$sudo chmod 600 /etc//authorized_keys&#xA;$sudo chown /etc//authorized_keys&#xA;$sudo vim /etc/ssh/sshd_config&#xA;「AuthorizedKeysFile /etc//authorized_keys」部分を編集&#xA;$sudo /etc/init.d/ssh restart&#xA;問題は$HOME以下にこのままではアクセス出来ないこと。&#xA;どうすればいいんだろうか？&#xA;参考: Encrypted Home Directory</description>
    </item>
    <item>
      <title>arm-Ubuntuのビルド（qemu用</title>
      <link>https://github.pyyoshi.com/blog/2010/10/arm-Ubuntu%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89qemu%E7%94%A8/</link>
      <pubDate>Wed, 27 Oct 2010 21:18:00 +0900</pubDate>
      <guid>https://github.pyyoshi.com/blog/2010/10/arm-Ubuntu%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89qemu%E7%94%A8/</guid>
      <description>ちょっとarm触る必要あったのでUbuntuでいくかと。&#xA;ビルドはいつも通りUbuntuで行います。はい。&#xA;ちなみに10.10です。もしかしたら、それ以前ではうまくいかないかもしれません。&#xA;んでは。&#xA;あ、今回QEMU上で動かすVer.は9.04です＾＾；&#xA;QEMU用のimg作成&#xA;#sudo mkdir arm-ubuntu&#xA;#cd arm-ubuntu&#xA;#sudo wget http://people.ubuntu.com/~ogra/arm/build-arm-rootfs&#xA;#sudo wget http://ports.ubuntu.com/ubuntu-ports/dists/lucid/main/installer-armel/current/images/versatile/netboot/vmlinuz&#xA;#sudo chmod 744 build-arm-rootfs&#xA;#sudo ./build-arm-rootfs &amp;ndash;fqdn ubuntu &amp;ndash;login ubuntuuser &amp;ndash;password hogefuga &amp;ndash;notarball &amp;ndash;imagesize 1G&#xA;※fdqn、login、passwordは任意のものに変えること。imagesizeも任意に変えるといいと思います。&#xA;QEMU上でUbuntuを起動&#xA;#cp qemu-armel-&amp;lt;タイムスタンプ&amp;gt;.img qemu-armel.img&#xA;※cpで元残すのも良いし、mvで名前変えるのもよし。&#xA;#sudo qemu-system-arm -M versatilepb -cpu cortex-a8 -kernel vmlinuz -hda qemu-armel.img -m 256 -append &amp;ldquo;root=/dev/sda rootwait&amp;rdquo;&#xA;起動後にやること&#xA;#LANG=C&#xA;#sudo vi /etc/network/interfaces&#xA;auto eth0&#xA;iface eth0 inet dhcp&#xA;#sudo ifconfig eth0 up&#xA;#sudo dhclient eth0</description>
    </item>
    <item>
      <title>UbuntuでMumble Serverを。</title>
      <link>https://github.pyyoshi.com/blog/2010/05/Ubuntu%E3%81%A7Mumble-Server%E3%82%92/</link>
      <pubDate>Mon, 10 May 2010 21:26:00 +0900</pubDate>
      <guid>https://github.pyyoshi.com/blog/2010/05/Ubuntu%E3%81%A7Mumble-Server%E3%82%92/</guid>
      <description>1,インストール&#xA;sudo apt-get install mumble-server&#xA;2,設定&#xA;dpkg-reconfigure mumble-server&#xA;sudo vim /etc/mumble-server.ini&#xA;4,起動（実は自動起動されますが、-supwすると落ちるので。&#xA;sudo /usr/sbin/murmurd -ini /etc/mumble-server.ini&#xA;注意することはsudoしてあげないとデータベースを読み込んでくれないということ。&#xA;詳しい設定方法はちょっとわからないので割愛ｗ</description>
    </item>
    <item>
      <title>Ubuntu 64bit環境でFlash Playerを使う</title>
      <link>https://github.pyyoshi.com/blog/2010/05/Ubuntu-64bit%E7%92%B0%E5%A2%83%E3%81%A7Flash-Player%E3%82%92%E4%BD%BF%E3%81%86/</link>
      <pubDate>Fri, 07 May 2010 14:33:00 +0900</pubDate>
      <guid>https://github.pyyoshi.com/blog/2010/05/Ubuntu-64bit%E7%92%B0%E5%A2%83%E3%81%A7Flash-Player%E3%82%92%E4%BD%BF%E3%81%86/</guid>
      <description>すっかり忘れておったのでメモ&#xA;sudo apt-get install flashplugin-installer&#xA;で、いちよインストールされる。&#xA;Google ChromeとかFirefoxで使えるようにするには&#xA;Chromeは&#xA;sudo mkdir /opt/google/chrome/plugins&#xA;sudo ln -s /usr/lib/flashplugin-installer/libflashplayer.so /opt/google/chrome/plugins&#xA;Firefoxは&#xA;sudo ln -s /usr/lib/flashplugin-installer/libflashplayer.so /usr/lib/mozilla/plugins&#xA;**&#xA;**&#xA;このやり方のほかにも&#xA;こことかから拾ってきたのを適当なディレクトリにぶっ込んでlnすりゃいいと思われる。&#xA;※それにしてもadobeさん(´・ω・)ｶﾜｲｿｽ&#xA;いろんなサイトの動画プレイヤーがHTML5版とかでテスト始まってていよいよって感じ。</description>
    </item>
    <item>
      <title>Ubuntu 9.10にMongoDBをインストール</title>
      <link>https://github.pyyoshi.com/blog/2010/03/Ubuntu-9.10%E3%81%ABMongoDB%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</link>
      <pubDate>Fri, 26 Mar 2010 01:15:00 +0900</pubDate>
      <guid>https://github.pyyoshi.com/blog/2010/03/Ubuntu-9.10%E3%81%ABMongoDB%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</guid>
      <description>&amp;ldquo;sudo apt-get install mongodb&amp;rdquo; できる娘うぶんちゅたんなのでほいほい投げてみたけど、やっぱり無かったので、素直にgitから持ってきてコンパイルすることに。&#xA;下準備としてコンパイルに必要なパッケージをインストール&#xA;sudo apt-get install build-dep scons libreadline-dev libmozjs-dev libpcre++-dev libboost-dev&#xA;gitからソースを拝借&#xA;cd /usr/src&#xA;sudo git clone git://github.com/mongodb/mongo.git&#xA;cd mongo&#xA;sudo scons all&#xA;でやったらエラーはいてくれやがったので、ググる先生に聞いたら、SpiderMonkeyをUTF8形式でインスコしないとだめとかなんとか。&#xA;cd -&#xA;sudo wget ftp://ftp.mozilla.org/pub/mozilla.org/js/js-1.7.0.tar.gz&#xA;sudo tar zxvf js-1.7.0.tar.gz&#xA;mv js/src mongo/js&#xA;cd mongo/js&#xA;export CFLAGS=&amp;quot;-DJS_C_STRINGS_ARE_UTF8&amp;quot;&#xA;sudo make -f Makefile.ref&#xA;sudo env JS_DIST=/usr make -f Makefile.ref export&#xA;で、ここまでいれておｋ的なこと書いてあって&amp;quot;sudo scons all&amp;quot;したんだけど、同じエラーがでやがったぜばかやろー！&#xA;いろいろ調べたら、&#xA;sudo apt-get install xulrunner-dev&#xA;すりゃーいいらしい。&#xA;気を取り直して&#xA;cd&#xA;cd /usr/src/mongo&#xA;sudo scons all</description>
    </item>
    <item>
      <title>Ubuntuサーバ再構築(４)</title>
      <link>https://github.pyyoshi.com/blog/2009/12/Ubuntu%E3%82%B5%E3%83%BC%E3%83%90%E5%86%8D%E6%A7%8B%E7%AF%89%EF%BC%94/</link>
      <pubDate>Sun, 27 Dec 2009 19:20:00 +0900</pubDate>
      <guid>https://github.pyyoshi.com/blog/2009/12/Ubuntu%E3%82%B5%E3%83%BC%E3%83%90%E5%86%8D%E6%A7%8B%E7%AF%89%EF%BC%94/</guid>
      <description>DynamicDNSに登録してもIPころころ変わっては意味がないのでなんとか対応したい！そういう時にスクリプト書いて対応するのは良いのだが管理が大変になるかも。そーいうときはDiCEを使おう！&#xA;ということでDiCE導入から設定まで&#xA;cd /usr/local/bin&#xA;sudo wget http://www.hi-ho.ne.jp/cgi-bin/user/yoshihiro_e/download.cgi?p=diced019&#xA;sudo tar zxvf diced01914.tar.gz&#xA;sudo rm &amp;ldquo;diced01914.tar.gz&amp;rdquo;&#xA;※端末の文字コードをEUCへ変更する&#xA;sudo ./diced&#xA;:setup&#xA;IPアドレスの検出方法を指定してください&#xA;(0) 自動検出&#xA;(1) ローカルのネットワークアダプタから検出&#xA;(2) 外部のスクリプトから検出&#xA;&amp;lt;現在:0&amp;gt;&#xA;(N)変更しない (P)戻る&#xA;&amp;gt;2&#xA;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&#xA;スクリプトのURLを入力してください&#xA;&amp;lt;現在:&amp;gt;&#xA;(N)変更しない (P)戻る&#xA;&amp;gt;http://ipcheck.ieserver.net/&#xA;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&#xA;プライベートIPアドレスも検出対象ですか？ (Y/N)&#xA;&amp;lt;現在:いいえ&amp;gt;&#xA;(P)戻る&#xA;&amp;gt;n&#xA;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&#xA;IPアドレスの検出をテストしますか？ (Y/N)&#xA;(P)戻る&#xA;&amp;gt;y&#xA;検出IPアドレス&amp;gt;*******&#xA;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&#xA;IPアドレスの検出をテストしますか？ (Y/N)&#xA;(P)戻る&#xA;&amp;gt;n&#xA;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&#xA;IPアドレスをチェックする間隔を指定してください(分)&#xA;設定可能範囲は5分以上です&#xA;&amp;lt;現在:10&amp;gt;&#xA;(N)変更しない (P)戻る&#xA;&amp;gt;5&#xA;=================================================&#xA;DNSサーバーの負荷を軽減するために頻繁なDNS更新を防ぐ必要があります&#xA;前回の更新から一定時間DNS更新処理を行わないように保護時間を設定して&#xA;ください(分) 設定可能範囲は10分から1440分です&#xA;&amp;lt;現在:60&amp;gt;&#xA;(N)変更しない (P)戻る&#xA;&amp;gt;30&#xA;=================================================&#xA;設定を保存しますか? (Y/N)</description>
    </item>
    <item>
      <title>Qt4環境を構築</title>
      <link>https://github.pyyoshi.com/blog/2009/12/Qt4%E7%92%B0%E5%A2%83%E3%82%92%E6%A7%8B%E7%AF%89/</link>
      <pubDate>Sun, 27 Dec 2009 17:04:00 +0900</pubDate>
      <guid>https://github.pyyoshi.com/blog/2009/12/Qt4%E7%92%B0%E5%A2%83%E3%82%92%E6%A7%8B%E7%AF%89/</guid>
      <description>sudo apt-get install libqt4-opengl-dev qt4-dev-tools libqt4-webkit-dbg libqt4-xmlpatterns-dbg libqt4-dbg　qt4-doc qt4-demos-dbg</description>
    </item>
    <item>
      <title>Ubuntu 64bit環境で32bitアプリを使う場合</title>
      <link>https://github.pyyoshi.com/blog/2009/12/Ubuntu-64bit%E7%92%B0%E5%A2%83%E3%81%A732bit%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%BF%E3%81%86%E5%A0%B4%E5%90%88/</link>
      <pubDate>Sun, 27 Dec 2009 16:35:00 +0900</pubDate>
      <guid>https://github.pyyoshi.com/blog/2009/12/Ubuntu-64bit%E7%92%B0%E5%A2%83%E3%81%A732bit%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%BF%E3%81%86%E5%A0%B4%E5%90%88/</guid>
      <description>**sudo apt-get install ia32-libs&#xA;**&#xA;でパッケージをインスコ。</description>
    </item>
    <item>
      <title>Ubuntuサーバ再構築(3)</title>
      <link>https://github.pyyoshi.com/blog/2009/12/Ubuntu%E3%82%B5%E3%83%BC%E3%83%90%E5%86%8D%E6%A7%8B%E7%AF%893/</link>
      <pubDate>Sun, 27 Dec 2009 15:51:00 +0900</pubDate>
      <guid>https://github.pyyoshi.com/blog/2009/12/Ubuntu%E3%82%B5%E3%83%BC%E3%83%90%E5%86%8D%E6%A7%8B%E7%AF%893/</guid>
      <description>OpenSSHインスコ&#xA;sudo apt-get install ssh&#xA;設定(参考)&#xA;vim /etc/ssh/sshd_config&#xA;#プロトコル&#xA;Protocol 2,1&#xA;#rootのログインの許可&#xA;PermitRootLogin no&#xA;でおｋ&#xA;あとはクライアントからログインでリモート操作出来ると思う。&#xA;出来ない場合はFWall関係を調べてみるといいだろう。</description>
    </item>
    <item>
      <title>Ubuntuサーバ再構築(2)</title>
      <link>https://github.pyyoshi.com/blog/2009/12/Ubuntu%E3%82%B5%E3%83%BC%E3%83%90%E5%86%8D%E6%A7%8B%E7%AF%892/</link>
      <pubDate>Thu, 24 Dec 2009 15:33:00 +0900</pubDate>
      <guid>https://github.pyyoshi.com/blog/2009/12/Ubuntu%E3%82%B5%E3%83%BC%E3%83%90%E5%86%8D%E6%A7%8B%E7%AF%892/</guid>
      <description>vsftpdをインスコ&#xA;sudo apt-get install vsftpd&#xA;次にconfig弄りなのだが、そのまえにvimをインスコ(vimデビューなう)&#xA;sudo apt-get install vim-full&#xA;sudo.vimもついでに。(参考)&#xA;sudo wget -P /usr/share/vim/addons/plugin -O sudo.vim &amp;ldquo;http://www.vim.org/scripts/download_script.php?src_id=3477&amp;rdquo;&#xA;vimの使い方はこちらを参照&#xA;標準のエディタの変更は&#xA;sudo update-alternatives &amp;ndash;config editor&#xA;で行える。&#xA;さて、気を取り直してvsftpdのconfigを弄る&#xA;基本的にvsftpd.confは/etc直下にあるが、ないという場合は以下を叩いてファイル位置を確認しよう。&#xA;dpkg -L vsftpd&#xA;vsftpd.confで弄った部分(参考１)(参考２)&#xA;#匿名ログインを許可&#xA;anonymous_enable=NO&#xA;#ローカルユーザのログインを許可&#xA;local_enable=YES&#xA;#書き込み許可&#xA;write_enable=YES&#xA;#デフォルトのumaskを022へ&#xA;local_umask=022&#xA;#ログ保存位置&#xA;xferlog_file=/var/log/vsftpd.log&#xA;#ログフォーマット&#xA;xferlog_std_fomat=NO&#xA;#アスキーモードでのアップロード許可&#xA;ascii_upload_enable=YES&#xA;#アスキーモードでのダウンロード許可&#xA;ascii_download_enable=YES&#xA;#ftpサーバ名 バージョンを表示させない。代替メッセージ&#xA;ftpd_banner=Welcome to my FTP serer.&#xA;#/homeより上層へのアクセスを制限&#xA;chroot_local_user=YES #/homeより上層へのアクセスを制限するリストの有効化&#xA;chroot_list_enable=YES #/homeより上層へのアクセスを制限リストの場所&#xA;chroot_list_file=/etc/vsftpd/chroot_list #Dirごと削除できるようにする。&#xA;ls_recurse_enable=YES&#xA;service start vsftpd&#xA;最低限設定したほうがいいやつを上げた。あとは自分の構築したい環境に適宜変更よろ。</description>
    </item>
    <item>
      <title>メモリ使用量の確認コマンド</title>
      <link>https://github.pyyoshi.com/blog/2009/12/%E3%83%A1%E3%83%A2%E3%83%AA%E4%BD%BF%E7%94%A8%E9%87%8F%E3%81%AE%E7%A2%BA%E8%AA%8D%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/</link>
      <pubDate>Wed, 23 Dec 2009 00:52:00 +0900</pubDate>
      <guid>https://github.pyyoshi.com/blog/2009/12/%E3%83%A1%E3%83%A2%E3%83%AA%E4%BD%BF%E7%94%A8%E9%87%8F%E3%81%AE%E7%A2%BA%E8%AA%8D%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/</guid>
      <description>free&#xA;でおｋ。</description>
    </item>
    <item>
      <title>Ubuntuサーバ再構築(1)</title>
      <link>https://github.pyyoshi.com/blog/2009/12/Ubuntu%E3%82%B5%E3%83%BC%E3%83%90%E5%86%8D%E6%A7%8B%E7%AF%891/</link>
      <pubDate>Tue, 22 Dec 2009 23:54:00 +0900</pubDate>
      <guid>https://github.pyyoshi.com/blog/2009/12/Ubuntu%E3%82%B5%E3%83%BC%E3%83%90%E5%86%8D%E6%A7%8B%E7%AF%891/</guid>
      <description>結構前に触ったきりでちょい不安になったので、OS再インスコすることにした。&#xA;ディストリはUbuntu9.04。9.10はバグがアルらしく様子見（どんなバグがあるか詳しく調べていない）&#xA;DNS Server LAMP Server OpenSSH Server を選択。&#xA;BasicUbuntuServerに何が入っているのか分からないのでひとまずこれで。&#xA;ネットインスコだったけど念のため&#xA;sudo apt-get update / sudo apt-get upgrade&#xA;を叩いた。&#xA;ついでにGUI環境もということで**LXDE**を。&#xA;sudo apt-get install lxde 鯖構築終わったら、lxdeを起動時に立ち上げないようにすることを忘れずに。&#xA;次回は vsftpd apache2 Python FireWall などの設定構築。</description>
    </item>
  </channel>
</rss>
